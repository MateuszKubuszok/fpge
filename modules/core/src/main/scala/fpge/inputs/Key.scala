package fpge.inputs

import enumeratum._

sealed abstract class Key(val id: Int) extends EnumEntry
object Key extends Enum[Key] {
  // scalastyle:off magic.number
  case object ANY_KEY extends Key( Int = -1)
  case object NUM_0 extends Key( 7)
  case object NUM_1 extends Key( 8)
  case object NUM_2 extends Key( 9)
  case object NUM_3 extends Key( 10)
  case object NUM_4 extends Key( 11)
  case object NUM_5 extends Key( 12)
  case object NUM_6 extends Key( 13)
  case object NUM_7 extends Key( 14)
  case object NUM_8 extends Key( 15)
  case object NUM_9 extends Key( 16)
  case object A extends Key( 29)
  case object ALT_LEFT extends Key( 57)
  case object ALT_RIGHT extends Key( 58)
  case object APOSTROPHE extends Key( 75)
  case object AT extends Key( 77)
  case object B extends Key( 30)
  case object BACK extends Key( 4)
  case object BACKSLASH extends Key( 73)
  case object C extends Key( 31)
  case object CALL extends Key( 5)
  case object CAMERA extends Key( 27)
  case object CLEAR extends Key( 28)
  case object COMMA extends Key( 55)
  case object D extends Key( 32)
  case object DEL extends Key( 67)
  case object BACKSPACE extends Key( 67)
  case object FORWARD_DEL extends Key( 112)
  case object DPAD_CENTER extends Key( 23)
  case object DPAD_DOWN extends Key( 20)
  case object DPAD_LEFT extends Key( 21)
  case object DPAD_RIGHT extends Key( 22)
  case object DPAD_UP extends Key( 19)
  case object CENTER extends Key( 23)
  case object DOWN extends Key( 20)
  case object LEFT extends Key( 21)
  case object RIGHT extends Key( 22)
  case object UP extends Key( 19)
  case object E extends Key( 33)
  case object ENDCALL extends Key( 6)
  case object ENTER extends Key( 66)
  case object ENVELOPE extends Key( 65)
  case object EQUALS extends Key( 70)
  case object EXPLORER extends Key( 64)
  case object F extends Key( 34)
  case object FOCUS extends Key( 80)
  case object G extends Key( 35)
  case object GRAVE extends Key( 68)
  case object H extends Key( 36)
  case object HEADSETHOOK extends Key( 79)
  case object HOME extends Key( 3)
  case object I extends Key( 37)
  case object J extends Key( 38)
  case object K extends Key( 39)
  case object L extends Key( 40)
  case object LEFT_BRACKET extends Key( 71)
  case object M extends Key( 41)
  case object MEDIA_FAST_FORWARD extends Key( 90)
  case object MEDIA_NEXT extends Key( 87)
  case object MEDIA_PLAY_PAUSE extends Key( 85)
  case object MEDIA_PREVIOUS extends Key( 88)
  case object MEDIA_REWIND extends Key( 89)
  case object MEDIA_STOP extends Key( 86)
  case object MENU extends Key( 82)
  case object MINUS extends Key( 69)
  case object MUTE extends Key( 91)
  case object N extends Key( 42)
  case object NOTIFICATION extends Key( 83)
  case object NUM extends Key( 78)
  case object O extends Key( 43)
  case object P extends Key( 44)
  case object PERIOD extends Key( 56)
  case object PLUS extends Key( 81)
  case object POUND extends Key( 18)
  case object POWER extends Key( 26)
  case object Q extends Key( 45)
  case object R extends Key( 46)
  case object RIGHT_BRACKET extends Key( 72)
  case object S extends Key( 47)
  case object SEARCH extends Key( 84)
  case object SEMICOLON extends Key( 74)
  case object SHIFT_LEFT extends Key( 59)
  case object SHIFT_RIGHT extends Key( 60)
  case object SLASH extends Key( 76)
  case object SOFT_LEFT extends Key( 1)
  case object SOFT_RIGHT extends Key( 2)
  case object SPACE extends Key( 62)
  case object STAR extends Key( 17)
  case object SYM extends Key( 63)
  case object T extends Key( 48)
  case object TAB extends Key( 61)
  case object U extends Key( 49)
  case object UNKNOWN extends Key( 0)
  case object V extends Key( 50)
  case object VOLUME_DOWN extends Key( 25)
  case object VOLUME_UP extends Key( 24)
  case object W extends Key( 51)
  case object X extends Key( 52)
  case object Y extends Key( 53)
  case object Z extends Key( 54)
  case object META_ALT_LEFT_ON extends Key( 16)
  case object META_ALT_ON extends Key( 2)
  case object META_ALT_RIGHT_ON extends Key( 32)
  case object META_SHIFT_LEFT_ON extends Key( 64)
  case object META_SHIFT_ON extends Key( 1)
  case object META_SHIFT_RIGHT_ON extends Key( 128)
  case object META_SYM_ON extends Key( 4)
  case object CONTROL_LEFT extends Key( 129)
  case object CONTROL_RIGHT extends Key( 130)
  case object ESCAPE extends Key( 131)
  case object END extends Key( 132)
  case object INSERT extends Key( 133)
  case object PAGE_UP extends Key( 92)
  case object PAGE_DOWN extends Key( 93)
  case object PICTSYMBOLS extends Key( 94)
  case object SWITCH_CHARSET extends Key( 95)
  case object BUTTON_CIRCLE extends Key( 255)
  case object BUTTON_A extends Key( 96)
  case object BUTTON_B extends Key( 97)
  case object BUTTON_C extends Key( 98)
  case object BUTTON_X extends Key( 99)
  case object BUTTON_Y extends Key( 100)
  case object BUTTON_Z extends Key( 101)
  case object BUTTON_L1 extends Key( 102)
  case object BUTTON_R1 extends Key( 103)
  case object BUTTON_L2 extends Key( 104)
  case object BUTTON_R2 extends Key( 105)
  case object BUTTON_THUMBL extends Key( 106)
  case object BUTTON_THUMBR extends Key( 107)
  case object BUTTON_START extends Key( 108)
  case object BUTTON_SELECT extends Key( 109)
  case object BUTTON_MODE extends Key( 110)

  case object NUMPAD_0 extends Key( 144)
  case object NUMPAD_1 extends Key( 145)
  case object NUMPAD_2 extends Key( 146)
  case object NUMPAD_3 extends Key( 147)
  case object NUMPAD_4 extends Key( 148)
  case object NUMPAD_5 extends Key( 149)
  case object NUMPAD_6 extends Key( 150)
  case object NUMPAD_7 extends Key( 151)
  case object NUMPAD_8 extends Key( 152)
  case object NUMPAD_9 extends Key( 153)

  case object COLON extends Key( 243)
  case object F1 extends Key( 244)
  case object F2 extends Key( 245)
  case object F3 extends Key( 246)
  case object F4 extends Key( 247)
  case object F5 extends Key( 248)
  case object F6 extends Key( 249)
  case object F7 extends Key( 250)
  case object F8 extends Key( 251)
  case object F9 extends Key( 252)
  case object F10 extends Key( 253)
  case object F11 extends Key( 254)
  case object F12 extends Key( 255)
  // scalastyle:on magic.number

  override def values: IndexedSeq[Key] = findValues

  val fromGDX: Int => Key = values.map(b => b.id -> b).toMap
}
